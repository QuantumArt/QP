//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Quantumart.QP8.DAL.Entities
{

    // ReSharper disable CollectionNeverUpdated.Global
    // ReSharper disable InconsistentNaming
    // ReSharper disable UnusedMember.Global
    // ReSharper disable UnusedAutoPropertyAccessor.Global
    public partial class PageTraceDAL
    {

        public decimal TraceId { get; set; }
        public decimal PageId { get; set; }
        public string QueryString { get; set; }
        public string Values { get; set; }
        public string Session { get; set; }
        public string Cookies { get; set; }
        public System.DateTime Traced { get; set; }
        public decimal Duration { get; set; }

        public PageDAL Page { get; set; }
        public ICollection<PageTraceFormatDAL> PageTraceFormat { get; set; }
    }
        public class PageTraceDALConfiguration : IEntityTypeConfiguration<PageTraceDAL>
        {
            public void Configure(EntityTypeBuilder<PageTraceDAL> builder)
            {
                builder.ToTable("PAGE_TRACE");

                builder.Property(x => x.TraceId).HasColumnName("TRACE_ID");
				builder.Property(x => x.PageId).HasColumnName("PAGE_ID");
				builder.Property(x => x.QueryString).HasColumnName("QUERY_STRING");
				builder.Property(x => x.Values).HasColumnName("VALUES");
				builder.Property(x => x.Session).HasColumnName("SESSION");
				builder.Property(x => x.Cookies).HasColumnName("COOKIES");
				builder.Property(x => x.Traced).HasColumnName("TRACED");
				builder.Property(x => x.Duration).HasColumnName("DURATION");


                builder.HasKey(x => x.TraceId);

                builder.HasOne(x => x.Page).WithMany(y => y.PageTrace).HasForeignKey(x => x.PageId);
    			builder.HasMany(x => x.PageTraceFormat).WithOne(y => y.PageTrace).HasForeignKey(y => y.TraceId);

            }
        }
}
