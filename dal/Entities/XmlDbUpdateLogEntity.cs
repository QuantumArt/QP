//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Quantumart.QP8.DAL.Entities
{
    
    // ReSharper disable CollectionNeverUpdated.Global
    // ReSharper disable InconsistentNaming
    // ReSharper disable UnusedMember.Global
    // ReSharper disable UnusedAutoPropertyAccessor.Global
    public partial class XmlDbUpdateLogEntity
    {
    
        public int Id { get; set; }
        public System.DateTime Applied { get; set; }
        public string Hash { get; set; }
        public string FileName { get; set; }
        public int UserId { get; set; }
        public string Body { get; set; }
        public string Version { get; set; }
    
        public ICollection<XmlDbUpdateActionsLogEntity> XML_DB_UPDATE_ACTIONS { get; set; }
    }
        public class XmlDbUpdateLogEntityConfiguration : IEntityTypeConfiguration<XmlDbUpdateLogEntity>
        {
            public void Configure(EntityTypeBuilder<XmlDbUpdateLogEntity> builder)
            {
                builder.ToTable("XML_DB_UPDATE");
    
                builder.Property(x => x.Version).HasColumnName("Version");
				builder.Property(x => x.Body).HasColumnName("Body");
				builder.Property(x => x.UserId).HasColumnName("USER_ID");
				builder.Property(x => x.FileName).HasColumnName("FileName");
				builder.Property(x => x.Hash).HasColumnName("Hash");
				builder.Property(x => x.Applied).HasColumnName("Applied");
				builder.Property(x => x.Id).HasColumnName("Id");
				
    
                builder.HasKey(x => x.Id);
    
                builder.HasMany(x => x.XML_DB_UPDATE_ACTIONS).WithOne(y => y.XML_DB_UPDATE).HasForeignKey(y => y.UpdateId);
    			
            }
        }
}
