//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Quantumart.QP8.DAL.Entities
{

    // ReSharper disable CollectionNeverUpdated.Global
    // ReSharper disable InconsistentNaming
    // ReSharper disable UnusedMember.Global
    // ReSharper disable UnusedAutoPropertyAccessor.Global
    public partial class PluginDAL :  IQpEntityObject
    {

        public decimal Id { get; set; }
        public string Name { get; set; }
        public string Description { get; set; }
        public string ServiceUrl { get; set; }
        public string Contract { get; set; }

        public string Code { get; set; }
        public string Version { get; set; }
        public string InstanceKey { get; set; }
        public bool AllowMultipleInstances { get; set; }

        public int Order { get; set; }
        public System.DateTime Created { get; set; }
        public System.DateTime Modified { get; set; }
        public decimal LastModifiedBy { get; set; }

        public ICollection<PluginVersionDAL> Versions { get; set; }

        public ICollection<PluginFieldDAL> Fields { get; set; }

        public UserDAL LastModifiedByUser { get; set; }
    }
        public class PluginDALConfiguration : IEntityTypeConfiguration<PluginDAL>
        {
            public void Configure(EntityTypeBuilder<PluginDAL> builder)
            {
                builder.ToTable("PLUGIN");

                builder.Property(x => x.LastModifiedBy).HasColumnName("LAST_MODIFIED_BY");
				builder.Property(x => x.Modified).HasColumnName("MODIFIED");
				builder.Property(x => x.Created).HasColumnName("CREATED");
				builder.Property(x => x.Order).HasColumnName("ORDER");
				builder.Property(x => x.ServiceUrl).HasColumnName("SERVICE_URL");
                builder.Property(x => x.Code).HasColumnName("CODE");
                builder.Property(x => x.Contract).HasColumnName("CONTRACT");
                builder.Property(x => x.AllowMultipleInstances).HasColumnName("ALLOW_MULTIPLE_INSTANCES");
                builder.Property(x => x.InstanceKey).HasColumnName("INSTANCE_KEY");
                builder.Property(x => x.Version).HasColumnName("VERSION");
				builder.Property(x => x.Description).HasColumnName("DESCRIPTION");
				builder.Property(x => x.Name).HasColumnName("NAME");
				builder.Property(x => x.Id).HasColumnName("ID").ValueGeneratedOnAdd();

                builder.HasKey(x => x.Id);

    			builder.HasOne(x => x.LastModifiedByUser).WithMany(y => y.PLUGIN).HasForeignKey(x => x.LastModifiedBy);

            }
        }
}
