//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Quantumart.QP8.DAL.Entities
{

    // ReSharper disable CollectionNeverUpdated.Global
    // ReSharper disable InconsistentNaming
    // ReSharper disable UnusedMember.Global
    // ReSharper disable UnusedAutoPropertyAccessor.Global
    public partial class ArticleVersionDAL
    {

        public decimal Id { get; set; }
        public string Version { get; set; }
        public string VersionLabel { get; set; }
        public Nullable<decimal> ContentVersionId { get; set; }
        public decimal ArticleId { get; set; }
        public string Description { get; set; }
        public System.DateTime Created { get; set; }
        public decimal CreatedBy { get; set; }
        public System.DateTime Modified { get; set; }
        public decimal ModifiedBy { get; set; }
        public Nullable<decimal> StatusTypeId { get; set; }

        public Nullable<bool> Visible { get; set; }

        public Nullable<bool> Archive { get; set; }

        public ArticleDAL Article { get; set; }
        public UserDAL CreatedByUser { get; set; }
        public ICollection<ItemToItemVersionDAL> ItemToItemVersion { get; set; }
        public UserDAL LastModifiedByUser { get; set; }
    }
        public class ArticleVersionDALConfiguration : IEntityTypeConfiguration<ArticleVersionDAL>
        {
            public void Configure(EntityTypeBuilder<ArticleVersionDAL> builder)
            {
                builder.ToTable("CONTENT_ITEM_VERSION");

                builder.Property(x => x.ModifiedBy).HasColumnName("LAST_MODIFIED_BY");
				builder.Property(x => x.Modified).HasColumnName("MODIFIED");
				builder.Property(x => x.Id).HasColumnName("CONTENT_ITEM_VERSION_ID");
				builder.Property(x => x.Version).HasColumnName("VERSION");
				builder.Property(x => x.VersionLabel).HasColumnName("VERSION_LABEL");
				builder.Property(x => x.ContentVersionId).HasColumnName("CONTENT_VERSION_ID");
				builder.Property(x => x.ArticleId).HasColumnName("CONTENT_ITEM_ID");
                builder.Property(x => x.StatusTypeId).HasColumnName("STATUS_TYPE_ID");
                builder.Property(x => x.Archive).HasColumnName("ARCHIVE");
                builder.Property(x => x.Visible).HasColumnName("VISIBLE");
				builder.Property(x => x.Description).HasColumnName("DESCRIPTION");
				builder.Property(x => x.Created).HasColumnName("CREATED");
				builder.Property(x => x.CreatedBy).HasColumnName("CREATED_BY");


                builder.HasKey(x => x.Id);

                builder.HasOne(x => x.Article).WithMany(y => y.Versions).HasForeignKey(x => x.ArticleId);
    			builder.HasOne(x => x.CreatedByUser).WithMany().HasForeignKey(x => x.CreatedBy);
    			builder.HasMany(x => x.ItemToItemVersion).WithOne(y => y.ArticleVersion).HasForeignKey(y => y.ArticleVersionId);
    			builder.HasOne(x => x.LastModifiedByUser).WithMany(y => y.CONTENT_ITEM_VERSION1).HasForeignKey(x => x.ModifiedBy);

            }
        }
}
