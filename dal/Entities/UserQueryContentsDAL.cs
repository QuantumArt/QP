//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Quantumart.QP8.DAL.Entities
{

    // ReSharper disable CollectionNeverUpdated.Global
    // ReSharper disable InconsistentNaming
    // ReSharper disable UnusedMember.Global
    // ReSharper disable UnusedAutoPropertyAccessor.Global
    public partial class UserQueryContentsDAL
    {

        public decimal VirtualContentId { get; set; }
        public decimal RealContentId { get; set; }
        public Nullable<bool> IsIdSource { get; set; }

        public ContentDAL Content { get; set; }
        public ContentDAL Content1 { get; set; }
    }
        public class UserQueryContentsDALConfiguration : IEntityTypeConfiguration<UserQueryContentsDAL>
        {
            public void Configure(EntityTypeBuilder<UserQueryContentsDAL> builder)
            {
                builder.ToTable("user_query_contents");

                builder.Property(x => x.VirtualContentId).HasColumnName("virtual_content_id");
				builder.Property(x => x.RealContentId).HasColumnName("real_content_id");
				builder.Property(x => x.IsIdSource).HasColumnName("is_id_source");


                builder.HasKey(x => new { x.VirtualContentId, x.RealContentId });


                builder.HasOne(x => x.Content).WithMany(y => y.UserQueryContents).HasForeignKey(x => x.RealContentId);
    			builder.HasOne(x => x.Content1).WithMany(y => y.UserQueryContents1).HasForeignKey(x => x.VirtualContentId);

            }
        }
}
