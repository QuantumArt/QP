//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Quantumart.QP8.DAL.Entities
{

    // ReSharper disable CollectionNeverUpdated.Global
    // ReSharper disable InconsistentNaming
    // ReSharper disable UnusedMember.Global
    // ReSharper disable UnusedAutoPropertyAccessor.Global
    public partial class XmlDbUpdateActionsLogEntity
    {

        public int Id { get; set; }
        public Nullable<int> UpdateId { get; set; }
        public string Ids { get; set; }
        public int ParentId { get; set; }
        public string Hash { get; set; }
        public System.DateTime Applied { get; set; }
        public int UserId { get; set; }
        public string SourceXml { get; set; }
        public string ResultXml { get; set; }

        public XmlDbUpdateLogEntity XML_DB_UPDATE { get; set; }
    }
        public class XmlDbUpdateActionsLogEntityConfiguration : IEntityTypeConfiguration<XmlDbUpdateActionsLogEntity>
        {
            public void Configure(EntityTypeBuilder<XmlDbUpdateActionsLogEntity> builder)
            {
                builder.ToTable("XML_DB_UPDATE_ACTIONS");

                builder.Property(x => x.ResultXml).HasColumnName("Resultxml");
				builder.Property(x => x.SourceXml).HasColumnName("Sourcexml");
				builder.Property(x => x.UserId).HasColumnName("Userid");
				builder.Property(x => x.Applied).HasColumnName("Applied");
				builder.Property(x => x.Hash).HasColumnName("Hash");
				builder.Property(x => x.ParentId).HasColumnName("Parentid");
				builder.Property(x => x.Ids).HasColumnName("Ids");
				builder.Property(x => x.UpdateId).HasColumnName("Updateid");
				builder.Property(x => x.Id).HasColumnName("Id");


                builder.HasKey(x => x.Id);

                builder.HasOne(x => x.XML_DB_UPDATE).WithMany(y => y.XML_DB_UPDATE_ACTIONS).HasForeignKey(x => x.UpdateId);

            }
        }
}
