//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Quantumart.QP8.DAL.Entities
{

    // ReSharper disable CollectionNeverUpdated.Global
    // ReSharper disable InconsistentNaming
    // ReSharper disable UnusedMember.Global
    // ReSharper disable UnusedAutoPropertyAccessor.Global
    public partial class VersionContentDataDAL
    {

        public decimal FieldId { get; set; }
        public decimal ArticleVersionId { get; set; }
        public string Data { get; set; }
        public string BlobData { get; set; }
        public System.DateTime Created { get; set; }

        public FieldDAL Field { get; set; }
    }
        public class VersionContentDataDALConfiguration : IEntityTypeConfiguration<VersionContentDataDAL>
        {
            public void Configure(EntityTypeBuilder<VersionContentDataDAL> builder)
            {
                builder.ToTable("VERSION_CONTENT_DATA");

                builder.Property(x => x.FieldId).HasColumnName("ATTRIBUTE_ID");
				builder.Property(x => x.ArticleVersionId).HasColumnName("CONTENT_ITEM_VERSION_ID");
				builder.Property(x => x.Data).HasColumnName("DATA");
				builder.Property(x => x.BlobData).HasColumnName("BLOB_DATA");
				builder.Property(x => x.Created).HasColumnName("CREATED");


                builder.HasKey(x => new { x.FieldId, x.ArticleVersionId });


                builder.HasOne(x => x.Field).WithMany(y => y.VersionContentData).HasForeignKey(x => x.FieldId);

            }
        }
}
