//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Quantumart.QP8.DAL.Entities
{

    // ReSharper disable CollectionNeverUpdated.Global
    // ReSharper disable InconsistentNaming
    // ReSharper disable UnusedMember.Global
    // ReSharper disable UnusedAutoPropertyAccessor.Global
    public partial class VeCommandDAL :  IQpEntityObject
    {

        public decimal Id { get; set; }
        public string Name { get; set; }
        public string Alias { get; set; }
        public int RowOrder { get; set; }
        public int ToolbarInRowOrder { get; set; }
        public int GroupInToolbarOrder { get; set; }
        public int CommandInGroupOrder { get; set; }
        public bool On { get; set; }
        public Nullable<decimal> PluginId { get; set; }
        public System.DateTime Created { get; set; }
        public System.DateTime Modified { get; set; }
        public decimal LastModifiedBy { get; set; }

        public VePluginDAL VePlugin { get; set; }
        public UserDAL LastModifiedByUser { get; set; }
    }
        public class VeCommandDALConfiguration : IEntityTypeConfiguration<VeCommandDAL>
        {
            public void Configure(EntityTypeBuilder<VeCommandDAL> builder)
            {
                builder.ToTable("VE_COMMAND");

                builder.Property(x => x.LastModifiedBy).HasColumnName("LAST_MODIFIED_BY");
				builder.Property(x => x.Modified).HasColumnName("MODIFIED");
				builder.Property(x => x.Created).HasColumnName("CREATED");
				builder.Property(x => x.PluginId).HasColumnName("PLUGIN_ID");
				builder.Property(x => x.On).HasColumnName("ON");
				builder.Property(x => x.CommandInGroupOrder).HasColumnName("COMMAND_IN_GROUP_ORDER");
				builder.Property(x => x.GroupInToolbarOrder).HasColumnName("GROUP_IN_TOOLBAR_ORDER");
				builder.Property(x => x.ToolbarInRowOrder).HasColumnName("TOOLBAR_IN_ROW_ORDER");
				builder.Property(x => x.RowOrder).HasColumnName("ROW_ORDER");
				builder.Property(x => x.Alias).HasColumnName("ALIAS");
				builder.Property(x => x.Name).HasColumnName("NAME");
				builder.Property(x => x.Id).HasColumnName("ID");


                builder.HasKey(x => x.Id);

                builder.HasOne(x => x.VePlugin).WithMany(y => y.VeCommands).HasForeignKey(x => x.PluginId);
    			builder.HasOne(x => x.LastModifiedByUser).WithMany(y => y.VE_COMMAND).HasForeignKey(x => x.LastModifiedBy);

            }
        }
}
