//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Quantumart.QP8.DAL.Entities
{

    // ReSharper disable CollectionNeverUpdated.Global
    // ReSharper disable InconsistentNaming
    // ReSharper disable UnusedMember.Global
    // ReSharper disable UnusedAutoPropertyAccessor.Global
    public partial class PageTraceFormatValuesDAL
    {

        public decimal TraceFormatId { get; set; }
        public string Name { get; set; }
        public string Value { get; set; }
        public bool Defined { get; set; }

        public PageTraceFormatDAL PageTraceFormat { get; set; }
    }
        public class PageTraceFormatValuesDALConfiguration : IEntityTypeConfiguration<PageTraceFormatValuesDAL>
        {
            public void Configure(EntityTypeBuilder<PageTraceFormatValuesDAL> builder)
            {
                builder.ToTable("PAGE_TRACE_FORMAT_VALUES");

                builder.Property(x => x.TraceFormatId).HasColumnName("TRACE_FORMAT_ID");
				builder.Property(x => x.Name).HasColumnName("NAME");
				builder.Property(x => x.Value).HasColumnName("VALUE");
				builder.Property(x => x.Defined).HasColumnName("DEFINED");


                builder.HasKey(x => new { x.TraceFormatId, x.Name, x.Defined });


                builder.HasOne(x => x.PageTraceFormat).WithMany(y => y.PageTraceFormatValues).HasForeignKey(x => x.TraceFormatId);

            }
        }
}
