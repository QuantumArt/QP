//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Quantumart.QP8.DAL.Entities
{

    // ReSharper disable CollectionNeverUpdated.Global
    // ReSharper disable InconsistentNaming
    // ReSharper disable UnusedMember.Global
    // ReSharper disable UnusedAutoPropertyAccessor.Global
    public partial class CdcLastExecutedLsn
    {

        public int Id { get; set; }
        public string ProviderName { get; set; }
        public string ProviderUrl { get; set; }
        public string TransactionLsn { get; set; }
        public Nullable<System.DateTime> TransactionDate { get; set; }
        public string LastExecutedLsn { get; set; }

        public ICollection<SystemNotificationDAL> SYSTEM_NOTIFICATION_QUEUE { get; set; }
    }
        public class CdcLastExecutedLsnConfiguration : IEntityTypeConfiguration<CdcLastExecutedLsn>
        {
            public void Configure(EntityTypeBuilder<CdcLastExecutedLsn> builder)
            {
                builder.ToTable("CdcLastExecutedLsn");

                builder.Property(x => x.LastExecutedLsn).HasColumnName("LastExecutedLsn");
				builder.Property(x => x.TransactionDate).HasColumnName("TransactionDate");
				builder.Property(x => x.TransactionLsn).HasColumnName("TransactionLsn");
				builder.Property(x => x.ProviderUrl).HasColumnName("ProviderUrl");
				builder.Property(x => x.ProviderName).HasColumnName("ProviderName");
				builder.Property(x => x.Id).HasColumnName("Id");


                builder.HasKey(x => x.Id);

                builder.HasMany(x => x.SYSTEM_NOTIFICATION_QUEUE).WithOne(y => y.CdcLastExecutedLsn).HasForeignKey(y => y.CdcLastExecutedLsnId);

            }
        }
}
