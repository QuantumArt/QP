//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Quantumart.QP8.DAL.Entities
{

    // ReSharper disable CollectionNeverUpdated.Global
    // ReSharper disable InconsistentNaming
    // ReSharper disable UnusedMember.Global
    // ReSharper disable UnusedAutoPropertyAccessor.Global
    public partial class BackendActionLogDAL
    {

        public int Id { get; set; }
        public decimal UserId { get; set; }
        public System.DateTime ExecutionTime { get; set; }
        public string ActionCode { get; set; }
        public string ActionTypeCode { get; set; }
        public string EntityTypeCode { get; set; }
        public Nullable<decimal> EntityId { get; set; }
        public string EntityStringId { get; set; }
        public Nullable<decimal> ParentEntityId { get; set; }
        public string EntityTitle { get; set; }
        public bool IsApi { get; set; }


        public string UserIp { get; set; }
        public IEnumerable<BackendActionLogUserGroupDAL> UserGroups { get; set; }
    }
        public class BackendActionLogDALConfiguration : IEntityTypeConfiguration<BackendActionLogDAL>
        {
            public void Configure(EntityTypeBuilder<BackendActionLogDAL> builder)
            {
                builder.ToTable("BACKEND_ACTION_LOG");

                builder.Property(x => x.IsApi).HasColumnName("API");
				builder.Property(x => x.EntityTitle).HasColumnName("ENTITY_TITLE");
				builder.Property(x => x.ParentEntityId).HasColumnName("PARENT_ENTITY_ID");
				builder.Property(x => x.EntityStringId).HasColumnName("ENTITY_STRING_ID");
				builder.Property(x => x.EntityId).HasColumnName("ENTITY_ID");
				builder.Property(x => x.EntityTypeCode).HasColumnName("ENTITY_TYPE_CODE");
				builder.Property(x => x.ActionTypeCode).HasColumnName("ACTION_TYPE_CODE");
				builder.Property(x => x.ActionCode).HasColumnName("ACTION_CODE");
				builder.Property(x => x.ExecutionTime).HasColumnName("EXEC_TIME");
				builder.Property(x => x.UserId).HasColumnName("USER_ID");
				builder.Property(x => x.Id).HasColumnName("ID").ValueGeneratedOnAdd();


                builder.HasKey(x => x.Id);

                builder.HasMany(x => x.UserGroups)
                    .WithOne(x => x.ActionLog)
                    .HasForeignKey(x => x.BackendActionLogId);
            }
        }
}
