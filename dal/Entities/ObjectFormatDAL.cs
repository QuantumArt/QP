//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Quantumart.QP8.DAL.Entities
{

    // ReSharper disable CollectionNeverUpdated.Global
    // ReSharper disable InconsistentNaming
    // ReSharper disable UnusedMember.Global
    // ReSharper disable UnusedAutoPropertyAccessor.Global
    public partial class ObjectFormatDAL :  IQpEntityObject
    {

        public decimal Id { get; set; }
        public decimal ObjectId { get; set; }
        public string Name { get; set; }
        public string Description { get; set; }
        public System.DateTime Created { get; set; }
        public System.DateTime Modified { get; set; }
        public decimal LastModifiedBy { get; set; }
        public string FormatBody { get; set; }
        public Nullable<decimal> NetLanguageId { get; set; }
        public string NetFormatName { get; set; }
        public string CodeBehind { get; set; }
        public Nullable<System.DateTime> Locked { get; set; }
        public Nullable<decimal> LockedBy { get; set; }
        public System.DateTime Assembled { get; set; }
        public bool AssembleInLive { get; set; }
        public bool AssembleInStage { get; set; }
        public bool AssembleNotificationInLive { get; set; }
        public bool AssembleNotificationInStage { get; set; }
        public bool AssemblePreviewInLive { get; set; }
        public bool AssemblePreviewInStage { get; set; }
        public string TagName { get; set; }
        public bool PermanentLock { get; set; }

        public NetLanguagesDAL NetLanguages { get; set; }
        public ICollection<NotificationsDAL> Notifications { get; set; }
        public ObjectDAL Object { get; set; }
        public ICollection<ObjectDAL> Object1 { get; set; }
        public UserDAL LockedByUser { get; set; }
        public ICollection<ObjectFormatVersionDAL> ObjectFormatVersion { get; set; }
        public ICollection<PageTraceFormatDAL> PageTraceFormat { get; set; }
        public UserDAL LastModifiedByUser { get; set; }
    }
        public class ObjectFormatDALConfiguration : IEntityTypeConfiguration<ObjectFormatDAL>
        {
            public void Configure(EntityTypeBuilder<ObjectFormatDAL> builder)
            {
                builder.ToTable("OBJECT_FORMAT");

                builder.Property(x => x.PermanentLock).HasColumnName("PERMANENT_LOCK");
				builder.Property(x => x.Id).HasColumnName("OBJECT_FORMAT_ID");
				builder.Property(x => x.ObjectId).HasColumnName("OBJECT_ID");
				builder.Property(x => x.Name).HasColumnName("FORMAT_NAME");
				builder.Property(x => x.Description).HasColumnName("DESCRIPTION");
				builder.Property(x => x.Created).HasColumnName("CREATED");
				builder.Property(x => x.Modified).HasColumnName("MODIFIED");
				builder.Property(x => x.LastModifiedBy).HasColumnName("LAST_MODIFIED_BY");
				builder.Property(x => x.FormatBody).HasColumnName("FORMAT_BODY");
				builder.Property(x => x.NetLanguageId).HasColumnName("NET_LANGUAGE_ID");
				builder.Property(x => x.NetFormatName).HasColumnName("NET_FORMAT_NAME");
				builder.Property(x => x.CodeBehind).HasColumnName("CODE_BEHIND");
				builder.Property(x => x.Locked).HasColumnName("LOCKED");
				builder.Property(x => x.LockedBy).HasColumnName("LOCKED_BY");
				builder.Property(x => x.Assembled).HasColumnName("ASSEMBLED");
				builder.Property(x => x.AssembleInLive).HasColumnName("ASSEMBLE_IN_LIVE");
				builder.Property(x => x.AssembleInStage).HasColumnName("ASSEMBLE_IN_STAGE");
				builder.Property(x => x.AssembleNotificationInLive).HasColumnName("ASSEMBLE_NOTIFICATION_IN_LIVE");
				builder.Property(x => x.AssembleNotificationInStage).HasColumnName("ASSEMBLE_NOTIFICATION_IN_STAGE");
				builder.Property(x => x.AssemblePreviewInLive).HasColumnName("ASSEMBLE_PREVIEW_IN_LIVE");
				builder.Property(x => x.AssemblePreviewInStage).HasColumnName("ASSEMBLE_PREVIEW_IN_STAGE");
				builder.Property(x => x.TagName).HasColumnName("TAG_NAME");


                builder.HasKey(x => x.Id);

                builder.HasOne(x => x.NetLanguages).WithMany(y => y.ObjectFormat).HasForeignKey(x => x.NetLanguageId);
    			builder.HasMany(x => x.Notifications).WithOne(y => y.Format).HasForeignKey(y => y.FormatId);
    			builder.HasOne(x => x.Object).WithMany(y => y.ChildObjectFormats).HasForeignKey(x => x.ObjectId);
    			builder.HasMany(x => x.Object1).WithOne(y => y.DefaultFormat).HasForeignKey(y => y.DefaultFormatId);
    			builder.HasOne(x => x.LockedByUser).WithMany(y => y.ObjectFormat).HasForeignKey(x => x.LockedBy);
    			builder.HasMany(x => x.ObjectFormatVersion).WithOne(y => y.ObjectFormat).HasForeignKey(y => y.ObjectFormatId);
    			builder.HasMany(x => x.PageTraceFormat).WithOne(y => y.ObjectFormat).HasForeignKey(y => y.FormatId);
    			builder.HasOne(x => x.LastModifiedByUser).WithMany(y => y.OBJECT_FORMAT).HasForeignKey(x => x.LastModifiedBy);

            }
        }
}
