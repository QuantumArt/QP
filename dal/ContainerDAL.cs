//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
namespace Quantumart.QP8.DAL
{

    // ReSharper disable CollectionNeverUpdated.Global
    // ReSharper disable InconsistentNaming
    // ReSharper disable UnusedMember.Global
    // ReSharper disable UnusedAutoPropertyAccessor.Global
    public partial class ContainerDAL
    {

        public decimal ObjectId { get; set; }
        public decimal ContentId { get; set; }
        public Nullable<decimal> AllowOrderDynamic { get; private set; }
        public string OrderStatic { get; set; }
        public string OrderDynamic { get; set; }
        public string FilterValue { get; set; }
        public string SelectStart { get; set; }
        public string SelectTotal { get; set; }
        public decimal ScheduleDependence { get; set; }
        public decimal RotateContent { get; set; }
        public decimal ApplySecurity { get; set; }
        public decimal ShowArchived { get; set; }
        public string CursorType { get; set; }
        public string CursorLocation { get; set; }
        public string LockType { get; set; }
        public Nullable<System.DateTime> Locked { get; set; }
        public Nullable<decimal> LockedBy { get; set; }
        public Nullable<decimal> Duration { get; set; }
        public bool EnableCacheInvalidation { get; set; }
        public string DynamicContentVariable { get; set; }
        public Nullable<decimal> StartLevel { get; set; }
        public Nullable<decimal> EndLevel { get; set; }
        public Nullable<bool> UseLevelFiltration { get; set; }
        public bool ReturnLastModified { get; set; }

        public ContentDAL Content { get; set; }
        public UserDAL Users { get; set; }
        public ObjectDAL Object { get; set; }
        public PermissionLevelDAL EndPermissionLevel { get; set; }
        public PermissionLevelDAL StartPermissionLevel { get; set; }
    }
        public class ContainerDALConfiguration : IEntityTypeConfiguration<ContainerDAL>
        {
            public void Configure(EntityTypeBuilder<ContainerDAL> builder)
            {
                builder.ToTable("CONTAINER");

                builder.Property(x => x.ObjectId).HasColumnName("OBJECT_ID");
				builder.Property(x => x.ContentId).HasColumnName("CONTENT_ID");
				builder.Property(x => x.AllowOrderDynamic).HasColumnName("ALLOW_ORDER_DYNAMIC");
				builder.Property(x => x.OrderStatic).HasColumnName("ORDER_STATIC");
				builder.Property(x => x.OrderDynamic).HasColumnName("ORDER_DYNAMIC");
				builder.Property(x => x.FilterValue).HasColumnName("FILTER_VALUE");
				builder.Property(x => x.SelectStart).HasColumnName("SELECT_START");
				builder.Property(x => x.SelectTotal).HasColumnName("SELECT_TOTAL");
				builder.Property(x => x.ScheduleDependence).HasColumnName("SCHEDULE_DEPENDENCE");
				builder.Property(x => x.RotateContent).HasColumnName("ROTATE_CONTENT");
				builder.Property(x => x.ApplySecurity).HasColumnName("APPLY_SECURITY");
				builder.Property(x => x.ShowArchived).HasColumnName("SHOW_ARCHIVED");
				builder.Property(x => x.CursorType).HasColumnName("CURSOR_TYPE");
				builder.Property(x => x.CursorLocation).HasColumnName("CURSOR_LOCATION");
				builder.Property(x => x.LockType).HasColumnName("LOCK_TYPE");
				builder.Property(x => x.Locked).HasColumnName("LOCKED");
				builder.Property(x => x.LockedBy).HasColumnName("LOCKED_BY");
				builder.Property(x => x.Duration).HasColumnName("DURATION");
				builder.Property(x => x.EnableCacheInvalidation).HasColumnName("ENABLE_CACHE_INVALIDATION");
				builder.Property(x => x.DynamicContentVariable).HasColumnName("DYNAMIC_CONTENT_VARIABLE");
				builder.Property(x => x.StartLevel).HasColumnName("START_LEVEL");
				builder.Property(x => x.EndLevel).HasColumnName("END_LEVEL");
				builder.Property(x => x.UseLevelFiltration).HasColumnName("USE_LEVEL_FILTRATION");
				builder.Property(x => x.ReturnLastModified).HasColumnName("RETURN_LAST_MODIFIED");


                builder.HasKey(x => x.ObjectId);

                builder.HasOne(x => x.Content).WithMany(y => y.Containers).HasForeignKey(x => x.ContentId);
    			builder.HasOne(x => x.Users).WithMany(y => y.Container).HasForeignKey(x => x.LockedBy);
    			builder.HasOne(x => x.Object).WithOne(y => y.Container).HasForeignKey<ObjectDAL>(y => y.Id);
    			builder.HasOne(x => x.EndPermissionLevel).WithMany(y => y.Container).HasForeignKey(x => x.EndLevel);
    			builder.HasOne(x => x.StartPermissionLevel).WithMany(y => y.Container1).HasForeignKey(x => x.StartLevel);

            }
        }
}
