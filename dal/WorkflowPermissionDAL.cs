//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
namespace Quantumart.QP8.DAL
{
    
    // ReSharper disable CollectionNeverUpdated.Global
    // ReSharper disable InconsistentNaming
    // ReSharper disable UnusedMember.Global
    // ReSharper disable UnusedAutoPropertyAccessor.Global
    public partial class WorkflowPermissionDAL :  IQpEntityObject
    {
    
        public decimal WorkflowId { get; set; }
        public Nullable<decimal> UserId { get; set; }
        public Nullable<decimal> GroupId { get; set; }
        public decimal PermissionLevelId { get; set; }
        public System.DateTime Created { get; set; }
        public System.DateTime Modified { get; set; }
        public decimal LastModifiedBy { get; set; }
        public decimal Id { get; set; }
    
        public UserGroupDAL Group { get; set; }
        public UserDAL User { get; set; }
        public WorkflowDAL Workflow { get; set; }
        public PermissionLevelDAL PermissionLevel { get; set; }
        public UserDAL LastModifiedByUser { get; set; }
    }
        public class WorkflowPermissionDALConfiguration : IEntityTypeConfiguration<WorkflowPermissionDAL>
        {
            public void Configure(EntityTypeBuilder<WorkflowPermissionDAL> builder)
            {
                builder.ToTable("WORKFLOW_ACCESS");
    
                builder.Property(x => x.WorkflowId).HasColumnName("WORKFLOW_ID");
				builder.Property(x => x.UserId).HasColumnName("USER_ID");
				builder.Property(x => x.GroupId).HasColumnName("GROUP_ID");
				builder.Property(x => x.PermissionLevelId).HasColumnName("PERMISSION_LEVEL_ID");
				builder.Property(x => x.Created).HasColumnName("CREATED");
				builder.Property(x => x.Modified).HasColumnName("MODIFIED");
				builder.Property(x => x.LastModifiedBy).HasColumnName("LAST_MODIFIED_BY");
				builder.Property(x => x.Id).HasColumnName("WORKFLOW_ACCESS_ACCESS_ID");
				
    
                builder.HasKey(x => x.Id);
    
                builder.HasOne(x => x.Group).WithMany(y => y.WorkflowAccess).HasForeignKey(x => x.GroupId);
    			builder.HasOne(x => x.User).WithMany(y => y.WorkflowAccess).HasForeignKey(x => x.UserId);
    			builder.HasOne(x => x.Workflow).WithMany(y => y.WorkflowAccess).HasForeignKey(x => x.WorkflowId);
    			builder.HasOne(x => x.PermissionLevel).WithMany(y => y.WORKFLOW_ACCESS).HasForeignKey(x => x.PermissionLevelId);
    			builder.HasOne(x => x.LastModifiedByUser).WithMany().HasForeignKey(x => x.LastModifiedBy);
    			
            }
        }
}
