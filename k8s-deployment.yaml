apiVersion: apps/v1
kind: Deployment
metadata:
  name: qp
  namespace: qp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: qp
  template:
    metadata:
      labels:
        app: qp
        logging: enabled
    spec:
      containers:
      - image: ||registry||/qp:||version||
        name: qp
        env:
        - name: Properties__QpConfigUrl
          valueFrom:
            configMapKeyRef:
              name: qp-config
              key: CONFIGURATION_SERVICE_HOST
        - name: Properties__QpConfigToken
          valueFrom:
            configMapKeyRef:
              name: qp-config
              key: CONFIGURATION_SERVICE_TOKEN
        - name: Properties__TempDirectory
          value: /qptemp
        - name: Properties__EnableSignalR
          value: "false"
        - name: Properties__EnableArticleScheduler
          value: "true"
        - name: Properties__EnableCommonScheduler
          value: "true"
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /qptemp
          name: temp-volume
        - mountPath: /qplibrary
          name: library-volume
        - mountPath: /etc/localtime
          name: tz-config
        resources:
          limits:
            memory: "1Gi"
          requests:
            memory: "256Mi"
      volumes:
      - name: temp-volume
        emptyDir: {}
      - name: library-volume
        persistentVolumeClaim:
          claimName: qp-library
      - name: tz-config
        hostPath:
          path: /usr/share/zoneinfo/Europe/Moscow
---
apiVersion: v1
kind: Service
metadata:
  name: qp
  namespace: qp
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: qp
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: qp
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "2m"
  namespace: qp
spec:
  rules:
  - host: qp.dev.qsupport.ru
    http:
      paths:
      - backend:
          serviceName: qp
          servicePort: 80
