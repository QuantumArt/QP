apiVersion: apps/v1
kind: Deployment
metadata:
  name: qp-media
  namespace: qp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: qp-media
  template:
    metadata:
      labels:
        app: qp-media
        logging: enabled
    spec:
      containers:
      - env:
        - name: TZ
          valueFrom:
            configMapKeyRef:
              name: qp-config
              key: TZ
        - name: Properties__QpConfigPath
          valueFrom:
            configMapKeyRef:
              name: qp-config
              key: DEMO_CONFIG_PATH        
          value: 
        - name: Properties__TempDirectory
          value: /qptemp
        - name: Properties__EnableSignalR
          value: "false"
        - name: Properties__EnableArticleScheduler
          value: "true"
        - name: Properties__EnableCommonScheduler
          value: "true"
        image: "||registry||/||image||:||version||"
        imagePullPolicy: IfNotPresent
        name: qp-media
        ports:
        - containerPort: 80
        resources:
          limits:
            memory: 1Gi
          requests:
            memory: 256Mi
        volumeMounts:
        - name: temp-volume
          mountPath: /qptemp        
        - name: library-volume
          mountPath: /qplibrary
        - name: config-pv
          mountPath: /app/config
        - name: time-config
          mountPath: /etc/localtime          
          subPathExpr: $(TZ)          
        - name: timezone-config
          mountPath: /etc/timezone
          subPath: TZ           
      volumes:
      - name: temp-volume
        emptyDir: {}
      - name: library-volume
        persistentVolumeClaim:
          claimName: qp-library
      - name: config-pv
        persistentVolumeClaim:
          claimName: qp-config          
      - name: time-config
        hostPath:
          path: /usr/share/zoneinfo
      - name: timezone-config
        configMap: 
          name: qp-config
          items:
          - key: TZ
            path: TZ            
---
apiVersion: v1
kind: Service
metadata:
  name: qp-media
  namespace: qp
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: qp-media
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: qp-media
  namespace: qp
spec:
  rules:
  - host: qp-media.dev.qsupport.ru
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: qp-media
            port:
              number: 80
