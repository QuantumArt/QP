@using Quantumart.QP8.Constants
@using Quantumart.QP8.Resources
@model Quantumart.QP8.WebMvc.ViewModels.Site.SearchInArticlesListViewModel

@using (Html.BeginDocumentPadding())
{
  <form class="formLayout" id="@Model.SearchLayoutFormElementId">
    <div id="@Model.SeachBlockElementId" class="simpleSeachBlock">
      @Html.TextBox(Model.SearchTextBoxElementId, string.Empty, new { @class = "textbox" })
      <input type="button" id="@Model.SearchButtonElementId" value="@ArticleStrings.Find" class="button" />
    </div>
  </form>

  <div id="@Model.MainComponentId"></div>
  <script>
    $(function () {
      $('#@Model.MainComponentId').qpGrid({
        selectable: false,
        columns: [
          { field: 'Id', title: '@EntityObjectStrings.ID', attributes: { 'class': 'id' }, width: 30 },
          { field: 'Name', title: '@ArticleStrings.Title', attributes: { 'class': 'title' }, sortable: false },
          { field: 'ParentName', title: '@ArticleStrings.ParentName' },
          { field: 'Text', title: '@EntityObjectStrings.Description', encoded: false },
          { field: 'StatusName', title: '@ArticleStrings.Status' },
          { field: 'Archive', title: '@ArticleStrings.Archive' },
          { field: 'Name', title: '@ArticleStrings.Title' },
          { field: 'Created', title: '@EntityObjectStrings.Created' },
          { field: 'Modified', title: '@EntityObjectStrings.Modified' },
          { field: 'LastModifiedByUser', title: '@EntityObjectStrings.LastModifiedBy' },
          { field: 'ActionCode', hidden: true },
          { field: 'EntityTypeCode', hidden: true },
        ],
        dataSource: {
          transport: {
            read: {
              url: "@Url.Action(Model.DataBindingActionName, Model.DataBindingControllerName, new { tabId = Model.TabId, parentId = Model.ParentEntityId, id = Model.SiteId } )",
            },
          },
          pageSize: @Default.GridPageSize,
        },
      });
    });
  </script>
}

@Html.PrepareInitScript(Model)
<script type="text/javascript">
	@(Model.ContextObjectName).setInitializedCallback(function() {
    var searchBlock = new Quantumart.QP8.BackendSearchInArticle(
      "@Model.MainComponentId", "@Model.SeachBlockElementId", "@Model.Query", this
    );
    searchBlock.initialize();
    this.searchBlock = searchBlock;

    $("#@Model.SearchLayoutFormElementId").submit(function(event) {
      event.preventDefault();
      $("#@Model.SearchButtonElementId").trigger("click");
      return false;
    });
  });

  @(Model.ContextObjectName).setTerminatingCallback(function() {
    if(this.searchBlock) {
      this.searchBlock.dispose();
      this.searchBlock = null;
    }
    $("#@Model.SearchLayoutFormElementId").unbind("submit");
  });

  @(Model.ContextObjectName).setExecSelectCallback(function(eventArgs) {
    if (this.searchBlock) {
      this.searchBlock.refreshQuery(eventArgs);
    }
  });
</script>
@Html.RunInitScript(Model)
