@using Quantumart.QP8.Constants
@using Quantumart.QP8.Resources
@model Quantumart.QP8.WebMvc.ViewModels.Notification.NotificationListViewModel

@using (Html.BeginDocumentPadding())
{
  if (!Model.IsReadOnly && Model.ShowAddNewItemButton)
  {
    using (Html.BeginLinkButtonsList())
    {
      @Html.AddNewItemLink(Model)
    }
  }
  <div id="@Model.MainComponentId"></div>
  <script>
    $(function () {
      $('#@Model.MainComponentId').qpGrid({
        columns: [
          {
            field: '',
            headerTemplate: '<input type="checkbox" name="SelectHeader" value="" />',
            headerAttributes: { 'class': 't-select-header' },
            template: '<input type="checkbox" name="SelectedNotificationsIDs" value="#= Id #" />',
            sortable: false,
            attributes: { 'class': 't-select-cell' },
            width: 30,
          },
          { field: 'Id', title: '@EntityObjectStrings.ID', attributes: { 'class': 'id' }, width: 50 },
          { field: 'Name', title: '@EntityObjectStrings.Name', attributes: { 'class': 'title' } },
          { field: 'Receiver', title: '@NotificationStrings.Receiver' },

          {
            field: 'IsExternal',
            title: '@NotificationStrings.External',
            template: '<input type="checkbox" disabled="disabled" # if (IsExternal) { # checked="checked" # } # />',
          },
          {
            field: 'ForCreate',
            title: '@NotificationStrings.ForCreate',
            template: '<input type="checkbox" disabled="disabled" # if (ForCreate) { # checked="checked" # } # />',
          },
          {
            field: 'ForModify',
            title: '@NotificationStrings.ForModify',
            template: '<input type="checkbox" disabled="disabled" # if (ForModify) { # checked="checked" # } # />',
          },
          {
            field: 'ForRemove',
            title: '@NotificationStrings.ForRemove',
            template: '<input type="checkbox" disabled="disabled" # if (ForRemove) { # checked="checked" # } # />',
          },
          {
            field: 'ForStatusChanged',
            title: '@NotificationStrings.ForStatusChanged',
            template: '<input type="checkbox" disabled="disabled" # if (ForStatusChanged) { # checked="checked" # } # />',
          },
          {
            field: 'ForStatusPartiallyChanged',
            title: '@NotificationStrings.ForStatusPartiallyChanged',
            template: '<input type="checkbox" disabled="disabled" # if (ForStatusPartiallyChanged) { # checked="checked" # } # />',
          },
          {
            field: 'ForFrontend',
            title: '@NotificationStrings.ForFrontend',
            template: '<input type="checkbox" disabled="disabled" # if (ForFrontend) { # checked="checked" # } # />',
          },
          {
            field: 'ForDelayedPublication',
            title: '@NotificationStrings.ForDelayedPublication',
            template: '<input type="checkbox" disabled="disabled" # if (ForDelayedPublication) { # checked="checked" # } # />',
          },
          { field: 'Created', title: '@EntityObjectStrings.Created' },
          { field: 'Modified', title: '@EntityObjectStrings.Modified' },
          { field: 'LastModifiedByUser', title: '@EntityObjectStrings.LastModifiedBy' },
        ],
        dataSource: {
          transport: {
            read: {
              url: "@Url.Action(Model.GettingDataActionName, "Notification", new { tabId = Model.TabId, parentId = Model.ParentEntityId } )",
            },
          },
          pageSize: @Default.GridPageSize,
        },
      });
    });
  </script>
}

@Html.PrepareAndRunInitScript(Model)
