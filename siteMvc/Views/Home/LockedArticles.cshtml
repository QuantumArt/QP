@using Quantumart.QP8.BLL.ListItems
@using Quantumart.QP8.Constants
@using Quantumart.QP8.Resources
@model Quantumart.QP8.WebMvc.ViewModels.HomePage.ArticleBaseListViewModel

@using (Html.BeginDocumentPadding())
{
  <div id="@Model.MainComponentId"></div>
  <script>
    $(function () {
      var bodyIconTpl = function (settings) {
        return function (dataItem) {
          return '<img ' +
            'src="' +
            '@Url.GetThemeSmallIconsImageFolderUrl()' + dataItem[settings.icon] + '"' +
            'style="width: 16px; height: 16px;"' +
            'class="t-image"' +
            'title="' + (dataItem[settings.tooltip] || dataItem[settings.icon]) + '"' +
            'alt="' + (dataItem[settings.tooltip] || dataItem[settings.icon]) + '"' +
            '/>';
        };
      };
      $('#@Model.MainComponentId').qpGrid({
        columns: [
          {
            field: '',
            headerTemplate: '<input type="checkbox" name="SelectHeader" value="" />',
            headerAttributes: { 'class': 't-select-header' },
            template: '<input type="checkbox" name="SelectedArticlesIDs" value="#:Id#" />',
            sortable: false,
            attributes: { 'class': 't-select-cell' },
            width: 30,
          },
          { field: 'Id', title: '@EntityObjectStrings.ID', attributes: { 'class': 'id' }, width: 50 },
          { field: 'Title', title: '@ArticleStrings.Title', attributes: { 'class': 'title' } },
          {
            field: 'IsPermanentLock',
            title: '@GlobalStrings.PermanentLockSet',
            template: '<input type="checkbox" disabled="disabled" checked="#:IsPermanentLock#" />', },
          { field: 'SiteName', title: '@SiteStrings.Name' },
          { field: 'ContentName', title: '@ContentStrings.Name' },
          { field: 'StatusName', title: '@ArticleStrings.Status' },
          { field: 'Created', title: '@EntityObjectStrings.Created' },
          { field: 'Modified', title: '@EntityObjectStrings.Modified' },
          { field: 'LastModifiedByUser', title: '@EntityObjectStrings.LastModifiedBy' },
        ],
        dataSource: {
          transport: {
            read: {
              url: "@Url.Action(Model.DataBindingActionName, Model.DataBindingControllerName, new { tabId = Model.TabId, parentId = Model.ParentEntityId } )",
            },
          },
          pageSize: @Default.GridPageSize,
        },
      });
    });
  </script> 
}
@Html.PrepareAndRunInitScript(Model)
