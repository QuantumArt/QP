@using Quantumart.QP8.BLL.ListItems
@using Quantumart.QP8.Constants
@using Quantumart.QP8.Resources
@model Quantumart.QP8.WebMvc.ViewModels.VirtualContent.UnionContentViewModel

@using (Html.BeginDocumentPadding())
{
  <div>VirtualContent</div>
  <div id="@Model.MainComponentId"></div>
  <script>
    $(function () {
      $('#@Model.MainComponentId').qpGrid({
        columns: [
          {
              field: '',
              headerTemplate: '<input type="checkbox" name="SelectHeader" value="" />',
              headerAttributes: { 'class': 't-select-header' },
              template: '<input type="checkbox" name="selectedContentIDs" value="#:Id#" />',
              sortable: false,
              attributes: { 'class': 't-select-cell' },
              width: 35,
          },
          { field: 'Id', title: '@EntityObjectStrings.ID', attributes: { 'class': 'id' }, width: 30 },
          { field: 'GroupName', title: '@ContentStrings.GroupName' },
          { field: 'SiteName', title: '@ContentStrings.ParentSiteName' },
          { field: 'Name', title: '@EntityObjectStrings.Name', attributes: { 'class' : 'title' } },
          { field: 'Description', title: '@EntityObjectStrings.Description' },
          @if (Model.IsVirtual)
          {
            @:{ field: 'VirtualType', title: '@ContentStrings.VirtualType' },
          }
          { field: 'Created', title: '@EntityObjectStrings.Created' },
          { field: 'Modified', title: '@EntityObjectStrings.Modified' },
          { field: 'LastModifiedByUser', title: '@EntityObjectStrings.LastModifiedBy' },
        ],
        dataSource: {
          transport: {
            read: {
              url: "@Url.Action(Model.GetDataAction, "VirtualContent", new { tabId = Model.TabId, parentId = Model.ParentEntityId})"
            },
          },
          pagesize: '@Default.GridPageSize',
        },
      });
    });
  </script>
}

@Html.PrepareAndRunInitScript(Model)
