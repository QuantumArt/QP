@using Quantumart.QP8.BLL.ListItems
@using Quantumart.QP8.Constants
@using Quantumart.QP8.Resources
@model Quantumart.QP8.WebMvc.ViewModels.VisualEditor.VisualEditorStyleListViewModel

@using (Html.BeginDocumentPadding())
{
    if (Model.ShowAddNewItemButton)
    {
        using (Html.BeginLinkButtonsList())
        {
            @Html.AddNewItemLink(Model)
        }
    }

    @(Html.Telerik().Grid<VisualEditorStyleListItem>().Name(Model.MainComponentId)
        .DataKeys(k => k.Add(s => s.Id))
        .Columns(c =>
        {
            c.Bound(s => s.Id).Title(EntityObjectStrings.ID).Width(30).HtmlAttributes(new { @class = "id" });

            c.Bound(s => s.Name).Title(EntityObjectStrings.Name).HtmlAttributes(new { @class = "title" });
            c.Bound(s => s.Description).Title(EntityObjectStrings.Description);
            c.Bound(s => s.Tag).Title("Tag");
            c.Bound(s => s.IsFormat).ClientTemplate(@"<input type=""checkbox"" disabled=""disabled"" <# if (IsFormat)  { #> checked=""checked"" <# } #>/>").Title("IsFormat");
            c.Bound(s => s.IsSystem).ClientTemplate(@"<input type=""checkbox"" disabled=""disabled"" <# if (IsSystem)  { #> checked=""checked"" <# } #>/>").Title("IsSystem");
            c.Bound(s => s.Created).Title(EntityObjectStrings.Created);
            c.Bound(s => s.Modified).Title(EntityObjectStrings.Modified);
            c.Bound(s => s.LastModifiedByLogin).Title(EntityObjectStrings.LastModifiedBy);
        })
        .DataBinding(db => db.Ajax().Select(Model.GettingDataActionName, "VisualEditorStyle")
        )
        .EnableCustomBinding(true)
        .Sortable()
        .Pageable(p => p.Style(GridPagerStyles.NextPreviousAndNumeric).PageSize(Default.GridPageSize))
        .Selectable(s => s.Enabled(true))
        .ClientEvents(e => e.OnDataBinding("$q.preventDefaultFunction").OnRowDataBound("$q.preventDefaultFunction"))
    )
}

@Html.PrepareAndRunInitScript(Model)
