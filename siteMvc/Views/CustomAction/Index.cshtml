@using Quantumart.QP8.BLL.ListItems
@using Quantumart.QP8.Constants
@using Quantumart.QP8.Resources
@model Quantumart.QP8.WebMvc.ViewModels.CustomAction.CustomActionListViewModel

@using (Html.BeginDocumentPadding())
{
  if (!Model.IsReadOnly && Model.ShowAddNewItemButton)
  {
    using (Html.BeginLinkButtonsList())
    {
      @Html.AddNewItemLink(Model)
    }
  }
  <div id="@Model.MainComponentId"></div>
  <script>
    $(function () {
      $(`#${'@Model.MainComponentId'}`).qpGrid({
        columns: [
          { field: 'Id', title: '@EntityObjectStrings.ID', attributes: { 'class': 'id' }, width: 50 },
          { field: 'Name', title: '@EntityObjectStrings.Name', attributes: { 'class': 'title' } },
          { field: 'ActionTypeName', title: '@CustomActionStrings.CustomActionType' },
          { field: 'EntityTypeName', title: '@CustomActionStrings.CustomActionEntityType' },
          { field: 'Url', title: '@CustomActionStrings.Url' },
          { field: 'Created', title: '@EntityObjectStrings.Created' },
          { field: 'Modified', title: '@EntityObjectStrings.Modified' },
          { field: 'LastModifiedByUser', title: '@EntityObjectStrings.LastModifiedBy' },
        ],
        dataSource: {
          transport: {
            read: {
              url: "@Url.Action(Model.GettingDataActionName, "CustomAction", new { tabId = Model.TabId, parentId = Model.ParentEntityId } )",
            },
          },
          pageSize: @Default.GridPageSize,
        },
      });
    });
  </script>
}

@Html.PrepareAndRunInitScript(Model)
