@using Quantumart.QP8.Resources
@using Quantumart.QP8.Constants
@model Quantumart.QP8.WebMvc.ViewModels.Audit.ActionLogAreaViewModel

@using (Html.BeginDocumentPadding())
{
  <div id="@Model.MainComponentId" class="alMainContaner">
    <form class="formLayout" action='javascript:void(0);'>
      <div id="@Model.FilterElementId" class="simpleSeachBlock">

        @Html.QpDropDownList("filterCombo", Model.FilterList, AuditStrings.SelectFilter,
            new ControlOptions
            {
                HtmlAttributes = new Dictionary<string, object>
                {
                    { "class", "alFilterCombo" }
                }
            }
        )

        <div class="alTilesContainer"></div>

        <div class="alButtons">
          <input id="@Html.UniqueId("findButton")" type="button" class="alSearchButton button" value="@AuditStrings.Find" />
          <input id="@Html.UniqueId("resetButton")" type="button" class="alResetButton button" value="@AuditStrings.ResetFilter" />
        </div>
      </div>
    </form>
    <div id="@Model.GridElementId"></div>
    <script>
      $(function () {
        $('#@Model.GridElementId').qpGrid({
          selectable: false,
          columns: [
            { field: 'ActionName', title: '@AuditStrings.ActionName' },
            { field: 'ActionTypeName', title: '@AuditStrings.ActionTypeName' },
            { field: 'EntityTypeName', title: '@AuditStrings.EntityTypeName' },
            { field: 'EntityStringId', title: '@AuditStrings.EntityStringId' },
            { field: 'EntityTitle', title: '@AuditStrings.EntityTitle', sortable: false },
            { field: 'ParentEntityId', title: '@AuditStrings.ParentEntityId' },
            {
              field: 'IsApi',
              title: '@AuditStrings.IsApi',
              template: '<input type="checkbox" disabled="disabled" # if (IsApi) { # checked="checked" # } # />'
            },
            { field: 'ExecutionTime', title: '@AuditStrings.ExecutionTime' },
            { field: 'UserLogin', title: '@AuditStrings.UserLogin' },
            { field: 'UserIp', title: '@AuditStrings.UserIp' },
            { field: 'UserGroupNames', title: '@AuditStrings.UserGroups' }
          ],
          dataSource: {
            transport: {
              read: {
                url: "@Url.Action("_Actions", "ActionLog")",
              },
            },
            pageSize: @Default.GridPageSize,
          },
        })
      });
    </script>
  </div>
}

@Html.PrepareInitScript(Model)
<script type="text/javascript">

    @(Model.ContextObjectName).setInitializedCallback(function() {
        this.filterComponent = new Quantumart.QP8.ActionLogComponent("@Model.FilterElementId", "@Model.GridElementId", @Model.ActionTypeListJson, @Model.EntityTypeListJson, @Model.ActionListJson);
        this.filterComponent.initialize();
    });
    @(Model.ContextObjectName).setTerminatingCallback(function() {
        this.filterComponent.dispose();
        this.filterComponent = null;
    });
</script>
@Html.RunInitScript(Model)
