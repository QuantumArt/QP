<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlreadyExists" xml:space="preserve">
    <value>File {0} already exists. Overwrite?</value>
  </data>
  <data name="Bytes" xml:space="preserve">
    <value>bytes</value>
  </data>
  <data name="Extension" xml:space="preserve">
    <value>Extension</value>
  </data>
  <data name="FileType" xml:space="preserve">
    <value>File Type</value>
  </data>
  <data name="GB" xml:space="preserve">
    <value>GB</value>
  </data>
  <data name="InvalidId" xml:space="preserve">
    <value>Invalid id {0}</value>
  </data>
  <data name="KB" xml:space="preserve">
    <value>KB</value>
  </data>
  <data name="MaxSizeExceeded" xml:space="preserve">
    <value>Max size exceeded: {0} Mb</value>
  </data>
  <data name="MB" xml:space="preserve">
    <value>MB</value>
  </data>
  <data name="NotAllowedExtensionForUpload" xml:space="preserve">
    <value>Unable to upload file {0}. Extension {1} is not allowed</value>
  </data>
  <data name="NotExists" xml:space="preserve">
    <value>File {0} doesn't exist</value>
  </data>
  <data name="RootFolder" xml:space="preserve">
    <value>Root Folder</value>
  </data>
  <data name="Size" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="Upload" xml:space="preserve">
    <value>Upload</value>
  </data>
  <data name="OperationIsNotSupported" xml:space="preserve">
    <value>Unable to proceed requested operation for the file {0}</value>
  </data>
  <data name="ContentFolderNotExists" xml:space="preserve">
    <value>Content folder (id = {0}) is not exists</value>
  </data>
  <data name="SiteFolderNotExists" xml:space="preserve">
    <value>Site folder (id = {0}) is not exists</value>
  </data>
  <data name="FileExists" xml:space="preserve">
    <value>File {0} already exists</value>
  </data>
  <data name="FileName" xml:space="preserve">
    <value>File Name</value>
  </data>
  <data name="FileNotExists" xml:space="preserve">
    <value>File {0} is not found</value>
  </data>
  <data name="Legend_FileParameters" xml:space="preserve">
    <value>File properties</value>
  </data>
  <data name="AllFileTypes" xml:space="preserve">
    <value>All Types</value>
  </data>
  <data name="Find" xml:space="preserve">
    <value>Find</value>
  </data>
  <data name="ResetFilter" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="CSS" xml:space="preserve">
    <value>Style sheet</value>
  </data>
  <data name="Flash" xml:space="preserve">
    <value>Flash movie</value>
  </data>
  <data name="Image" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="Javascript" xml:space="preserve">
    <value>Javascript</value>
  </data>
  <data name="Media" xml:space="preserve">
    <value>Media file</value>
  </data>
  <data name="Office" xml:space="preserve">
    <value>Microsoft Office</value>
  </data>
  <data name="PDF" xml:space="preserve">
    <value>PDF</value>
  </data>
  <data name="Unknown" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="Dimensions" xml:space="preserve">
    <value>Dimensions</value>
  </data>
  <data name="UploadIsNotAllowed" xml:space="preserve">
    <value>You have no access to upload files to the folder {0}</value>
  </data>
  <data name="CannotReadFolderBecauseOfSecurity" xml:space="preserve">
    <value>Cannot read folder contents because you have no enough permissions</value>
  </data>
  <data name="HtmlUploaderErrorMesage" xml:space="preserve">
    <value>Upload file error.</value>
  </data>
  <data name="HtmlUploaderMaxSizeExceeded" xml:space="preserve">
    <value>File: {0}. Max size exceeded: {1} Mb</value>
  </data>
  <data name="PlUploadErrorReport" xml:space="preserve">
    <value>File: {0}. Unhandled error: {1}. Pl error code: {2}</value>
  </data>
  <data name="VirtualPath" xml:space="preserve">
    <value>Virtual Path</value>
  </data>
  <data name="PhysicalPath" xml:space="preserve">
    <value>Physical Path</value>
  </data>
  <data name="ZeroSizeWarning" xml:space="preserve">
    <value>File {0} has zero-size, it won`t be uploaded</value>
  </data>
  <data name="CopySiteFiles" xml:space="preserve">
    <value>Copying files from site {0}</value>
  </data>
  <data name="FileExistsTryAnother" xml:space="preserve">
    <value>File {0} already exists. Please, try enter another name</value>
  </data>
  <data name="AccessDenied" xml:space="preserve">
    <value>Access to the path {0} is denied for user {1}</value>
  </data>
  <data name="ExtensionIsNotAllowed" xml:space="preserve">
    <value>Extension {0} is not allowed</value>
  </data>
  <data name="InvalidReduceRatio" xml:space="preserve">
    <value>Reduce ratio must be greater then 0.</value>
  </data>
  <data name="AutoResizeConfirmMessage" xml:space="preserve">
    <value>Resized copies of the file {0} will be created automatically according to the storage settings.</value>
  </data>
  <data name="AutoResizedFileExists" xml:space="preserve">
    <value>Autoresized file {0} already exists. Another copies were not created. </value>
  </data>
  <data name="AutoResizeSettingsAreIncorrect" xml:space="preserve">
    <value>Storage autoresize settings are incorrect or missing.</value>
  </data>
</root>
