//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Quantumart.QP8.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class QpPluginStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal QpPluginStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Quantumart.QP8.Resources.QpPluginStrings", typeof(QpPluginStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add New QP Plugin.
        /// </summary>
        public static string AddNewPlugin {
            get {
                return ResourceManager.GetString("AddNewPlugin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By Contract.
        /// </summary>
        public static string ByContract {
            get {
                return ResourceManager.GetString("ByContract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By Service Url.
        /// </summary>
        public static string ByServiceUrl {
            get {
                return ResourceManager.GetString("ByServiceUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service Code.
        /// </summary>
        public static string Code {
            get {
                return ResourceManager.GetString("Code", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command`s #{0} alias should be unique within its VE Plugin`s сommands.
        /// </summary>
        public static string CommandAliasDuplicate {
            get {
                return ResourceManager.GetString("CommandAliasDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The length of command`s #{0} Alias should not exceed 255 characters!.
        /// </summary>
        public static string CommandAliasMaxLengthExceeded {
            get {
                return ResourceManager.GetString("CommandAliasMaxLengthExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command`s #{0} Alias should be unique within all VE сommands!.
        /// </summary>
        public static string CommandAliasNonUnique {
            get {
                return ResourceManager.GetString("CommandAliasNonUnique", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter alias for command #{0}!.
        /// </summary>
        public static string CommandAliasRequired {
            get {
                return ResourceManager.GetString("CommandAliasRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command`s #{0} name should be unique within its VE Plugin`s сommands!.
        /// </summary>
        public static string CommandNameDuplicate {
            get {
                return ResourceManager.GetString("CommandNameDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command #{0} has invalid name format!.
        /// </summary>
        public static string CommandNameInvalidFormat {
            get {
                return ResourceManager.GetString("CommandNameInvalidFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Length of command`s #{0} name should not exceed 255 сharacters!.
        /// </summary>
        public static string CommandNameMaxLengthExceeded {
            get {
                return ResourceManager.GetString("CommandNameMaxLengthExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command`s #{0} name should be unique within all VE сommands.
        /// </summary>
        public static string CommandNameNonUnique {
            get {
                return ResourceManager.GetString("CommandNameNonUnique", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter name for command #{0}!.
        /// </summary>
        public static string CommandNameRequired {
            get {
                return ResourceManager.GetString("CommandNameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some commands are not valid.
        /// </summary>
        public static string CommandNotValid {
            get {
                return ResourceManager.GetString("CommandNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contract.
        /// </summary>
        public static string Contract {
            get {
                return ResourceManager.GetString("Contract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InstanceKey.
        /// </summary>
        public static string InstanceKey {
            get {
                return ResourceManager.GetString("InstanceKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Order.
        /// </summary>
        public static string Order {
            get {
                return ResourceManager.GetString("Order", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Plugin creation mode.
        /// </summary>
        public static string PluginCreationMode {
            get {
                return ResourceManager.GetString("PluginCreationMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to QP Plugin is not found (Id = {0}).
        /// </summary>
        public static string PluginNotFound {
            get {
                return ResourceManager.GetString("PluginNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service URL.
        /// </summary>
        public static string ServiceUrl {
            get {
                return ResourceManager.GetString("ServiceUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid URL format.
        /// </summary>
        public static string ServiceUrlInvalidFormat {
            get {
                return ResourceManager.GetString("ServiceUrlInvalidFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The length of URL should not exceed {1} characters.
        /// </summary>
        public static string ServiceUrlMaxLengthExceeded {
            get {
                return ResourceManager.GetString("ServiceUrlMaxLengthExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version.
        /// </summary>
        public static string Version {
            get {
                return ResourceManager.GetString("Version", resourceCulture);
            }
        }
    }
}
