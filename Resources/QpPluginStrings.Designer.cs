//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Quantumart.QP8.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class QpPluginStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal QpPluginStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Quantumart.QP8.Resources.QpPluginStrings", typeof(QpPluginStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add New QP Plugin.
        /// </summary>
        public static string AddNewPlugin {
            get {
                return ResourceManager.GetString("AddNewPlugin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By Contract.
        /// </summary>
        public static string ByContract {
            get {
                return ResourceManager.GetString("ByContract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By Service Url.
        /// </summary>
        public static string ByServiceUrl {
            get {
                return ResourceManager.GetString("ByServiceUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service Code.
        /// </summary>
        public static string Code {
            get {
                return ResourceManager.GetString("Code", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service Code + Instance Key already exists.
        /// </summary>
        public static string CodeExists {
            get {
                return ResourceManager.GetString("CodeExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service Code is empty.
        /// </summary>
        public static string CodeNotEntered {
            get {
                return ResourceManager.GetString("CodeNotEntered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contract.
        /// </summary>
        public static string Contract {
            get {
                return ResourceManager.GetString("Contract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contract is empty.
        /// </summary>
        public static string ContractNotEntered {
            get {
                return ResourceManager.GetString("ContractNotEntered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are fields with equal names in contract.
        /// </summary>
        public static string FieldNameDuplicate {
            get {
                return ResourceManager.GetString("FieldNameDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are fields names with length more than {1} characters in contract.
        /// </summary>
        public static string FieldNameMaxLengthExceeded {
            get {
                return ResourceManager.GetString("FieldNameMaxLengthExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are fields with empty names in contract.
        /// </summary>
        public static string FieldNameNotEntered {
            get {
                return ResourceManager.GetString("FieldNameNotEntered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instance Key.
        /// </summary>
        public static string InstanceKey {
            get {
                return ResourceManager.GetString("InstanceKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error while loading contract from Service URL.
        /// </summary>
        public static string LoadedContractInvalidMessage {
            get {
                return ResourceManager.GetString("LoadedContractInvalidMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Order.
        /// </summary>
        public static string Order {
            get {
                return ResourceManager.GetString("Order", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Syntax error while parsing contract.
        /// </summary>
        public static string ParsedContractInvalidMessage {
            get {
                return ResourceManager.GetString("ParsedContractInvalidMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Plugin creation mode.
        /// </summary>
        public static string PluginCreationMode {
            get {
                return ResourceManager.GetString("PluginCreationMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to QP Plugin is not found (Id = {0}).
        /// </summary>
        public static string PluginNotFound {
            get {
                return ResourceManager.GetString("PluginNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reload contract.
        /// </summary>
        public static string ReloadContract {
            get {
                return ResourceManager.GetString("ReloadContract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service URL.
        /// </summary>
        public static string ServiceUrl {
            get {
                return ResourceManager.GetString("ServiceUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid URL format.
        /// </summary>
        public static string ServiceUrlInvalidFormat {
            get {
                return ResourceManager.GetString("ServiceUrlInvalidFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The length of URL should not exceed {1} characters.
        /// </summary>
        public static string ServiceUrlMaxLengthExceeded {
            get {
                return ResourceManager.GetString("ServiceUrlMaxLengthExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version.
        /// </summary>
        public static string Version {
            get {
                return ResourceManager.GetString("Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contract version hasn&apos;t changed.
        /// </summary>
        public static string VersionEqual {
            get {
                return ResourceManager.GetString("VersionEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The length of Version field should not exceed {1} characters.
        /// </summary>
        public static string VersionMaxLengthExceeded {
            get {
                return ResourceManager.GetString("VersionMaxLengthExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version is empty.
        /// </summary>
        public static string VersionNotEntered {
            get {
                return ResourceManager.GetString("VersionNotEntered", resourceCulture);
            }
        }
    }
}
