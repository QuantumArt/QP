<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddNewNotification" xml:space="preserve">
    <value>Добавить новое уведомление</value>
  </data>
  <data name="BasicParameters" xml:space="preserve">
    <value>Основные параметры</value>
  </data>
  <data name="ForCreate" xml:space="preserve">
    <value>Создание</value>
  </data>
  <data name="ForFrontend" xml:space="preserve">
    <value>Запрос по требованию</value>
  </data>
  <data name="Format" xml:space="preserve">
    <value>Формат</value>
  </data>
  <data name="ForModify" xml:space="preserve">
    <value>Изменение</value>
  </data>
  <data name="ForRemove" xml:space="preserve">
    <value>Удаление</value>
  </data>
  <data name="ForStatusChanged" xml:space="preserve">
    <value>Изменение статуса</value>
  </data>
  <data name="ForStatusPartiallyChanged" xml:space="preserve">
    <value>Частичное изменение статуса</value>
  </data>
  <data name="NotificationNotFound" xml:space="preserve">
    <value>Уведомление не найдено (Id = {0})</value>
  </data>
  <data name="Receiver" xml:space="preserve">
    <value>Получатель</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Статус</value>
  </data>
  <data name="Events" xml:space="preserve">
    <value>События</value>
  </data>
  <data name="Sender" xml:space="preserve">
    <value>Отправитель</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>Опции</value>
  </data>
  <data name="UseDefaultSenderName" xml:space="preserve">
    <value>Использовать имя отправителя по умолчанию</value>
  </data>
  <data name="DefaultSenderName" xml:space="preserve">
    <value>Имя отправителя по умолчанию</value>
  </data>
  <data name="SenderName" xml:space="preserve">
    <value>Имя отправителя</value>
  </data>
  <data name="UseQP8UserEmail" xml:space="preserve">
    <value>Использовать e-mail пользователя QP8</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>E-mail</value>
  </data>
  <data name="SendFiles" xml:space="preserve">
    <value>Посылать файлы как вложения</value>
  </data>
  <data name="UseQaMail" xml:space="preserve">
    <value>Использовать компонент QA_Mail в бэкенде QP7</value>
  </data>
  <data name="QP8User" xml:space="preserve">
    <value>Пользователь QP8</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>Пользователь</value>
  </data>
  <data name="UserGroup" xml:space="preserve">
    <value>Группа пользователей</value>
  </data>
  <data name="Field" xml:space="preserve">
    <value>Поле</value>
  </data>
  <data name="ReceiverType" xml:space="preserve">
    <value>Тип получателя</value>
  </data>
  <data name="FormatIdNotEntered" xml:space="preserve">
    <value>Пожалуйста, выберите формат!</value>
  </data>
  <data name="CreateDefaultFormat" xml:space="preserve">
    <value>Создать формат по умолчанию</value>
  </data>
  <data name="SenderNameNotEntered" xml:space="preserve">
    <value>Пожалуйста, введите имя отправителя!</value>
  </data>
  <data name="SenderNameMaxLengthExceeded" xml:space="preserve">
    <value>Длина имени отправителя не должна превышать {0} символов</value>
  </data>
  <data name="SenderEmailNotEntered" xml:space="preserve">
    <value>Пожалуйста, введите e-mail отправителя!</value>
  </data>
  <data name="SenderEmailNotValid" xml:space="preserve">
    <value>Введенный e-mail отправителя невалидный!</value>
  </data>
  <data name="UserNotSelected" xml:space="preserve">
    <value>Пожалуйста, выберите пользователя!</value>
  </data>
  <data name="FieldNotSelected" xml:space="preserve">
    <value>Пожалуйста, выберите поле!</value>
  </data>
  <data name="UserGroupNotSelected" xml:space="preserve">
    <value>Пожалуйста, выберите группу пользователей!</value>
  </data>
  <data name="Unbind" xml:space="preserve">
    <value>Отвязать</value>
  </data>
  <data name="UnbindedMessage" xml:space="preserve">
    <value>Уведомление было отвязано от workflow</value>
  </data>
  <data name="RadioEveryone" xml:space="preserve">
    <value>Все в истории изменений</value>
  </data>
  <data name="RadioFromArticle" xml:space="preserve">
    <value>E-mail из поля статьи</value>
  </data>
  <data name="RadioFromContent" xml:space="preserve">
    <value>E-mail из контента</value>
  </data>
  <data name="RadioNone" xml:space="preserve">
    <value>Нет получателя</value>
  </data>
  <data name="RadioUser" xml:space="preserve">
    <value>Пользователь</value>
  </data>
  <data name="RadioUserGroup" xml:space="preserve">
    <value>Группа пользователей</value>
  </data>
  <data name="EventNotSelected" xml:space="preserve">
    <value>Пожалуйста, выберите хотя бы одно событие!</value>
  </data>
  <data name="AnyStatus" xml:space="preserve">
    <value>Любой статус</value>
  </data>
  <data name="ChooseField" xml:space="preserve">
    <value>Выберите поле</value>
  </data>
  <data name="ChooseFormat" xml:space="preserve">
    <value>Выберите формат</value>
  </data>
  <data name="SenderEmailLengthExceeded" xml:space="preserve">
    <value>Длина e-mail`а отправителя не должна превышать {0} символов</value>
  </data>
  <data name="WarningString" xml:space="preserve">
    <value>Данное уведомление является сгенерированным по умолчанию и привязано к Workflow ({0}).</value>
  </data>
  <data name="External" xml:space="preserve">
    <value>Внешнее</value>
  </data>
  <data name="ExternalUrl" xml:space="preserve">
    <value>Внешний URL</value>
  </data>
  <data name="UseService" xml:space="preserve">
    <value>Использовать сервис для отправки</value>
  </data>
  <data name="ExternalUrlNotEntered" xml:space="preserve">
    <value>Пожалуйста, введите внешний URL!</value>
  </data>
  <data name="ExternalUrlNotValid" xml:space="preserve">
    <value>Введенный внешний URL невалидный!</value>
  </data>
  <data name="ForDelayedPublication" xml:space="preserve">
    <value>Отложенная публикация</value>
  </data>
  <data name="ContentContainsAggregatedFields" xml:space="preserve">
    <value>Невозможно создать уведомление, потому что контент содержит агрегированные поля </value>
  </data>
  <data name="Template" xml:space="preserve">
    <value>Шаблон уведомления</value>
  </data>
  <data name="TemplateIdNotEntered" xml:space="preserve">
    <value>Выберите шаблон уведомления</value>
  </data>
  <data name="ChooseTemplate" xml:space="preserve">
    <value>Выберите шаблон</value>
  </data>
  <data name="HideRecipients" xml:space="preserve">
    <value>Скрыть получателей друг от друга</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Категория</value>
  </data>
  <data name="ChooseCategory" xml:space="preserve">
    <value>Выберите категорию</value>
  </data>
  <data name="ConfirmationTemplate" xml:space="preserve">
    <value>Шаблон подтверждения</value>
  </data>
</root>